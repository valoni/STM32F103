////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Microsoft Corporation.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//#include <tinyhal.h>
//
//GPIO_PIN VirtualKey_GetPins( UINT32 virtualKey)
//{
//	switch(virtualKey)
//	{
//		case VK_SELECT:
//			return LPC24XX_GPIO::c_P0_12;//key1
//		case VK_UP:
//			return LPC24XX_GPIO::c_P0_24;//key2
//		case VK_DOWN:
//			return LPC24XX_GPIO::c_P0_25;//key3
//		case VK_LEFT:
//			return LPC24XX_GPIO::c_P0_15;//key4
//		case VK_RIGHT:
//			return LPC24XX_GPIO::c_P1_19;//key5
//		case VK_MENU:
//			return LPC24XX_GPIO::c_P0_26;//key6
//		case VK_RETURN:
//			return LPC24XX_GPIO::c_P2_25;//Key7
//		default:
//			return GPIO_PIN_NONE; 
//	}
//}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Microsoft Corporation.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <tinyhal.h>

GPIO_PIN VirtualKey_GetPins( UINT32 virtualKey)
{
	switch(virtualKey)
	{
		case VK_SELECT:
			return LPC24XX_GPIO::c_P2_22;
		case VK_RIGHT:
			return LPC24XX_GPIO::c_P2_23;
		case VK_DOWN:
			return LPC24XX_GPIO::c_P2_25;
		case VK_LEFT:
			return LPC24XX_GPIO::c_P2_26;
		case VK_UP:
			return LPC24XX_GPIO::c_P2_27;
		default:
			return GPIO_PIN_NONE; 
	}
}



